using System.Formats.Asn1;
using System.Reflection.Metadata;
using System.Xml;
//Classe Affichage permet de stocker les codes d'affichage longs afin de garder un code lisible.
//Cette classe est compos√© uniquement de m√©thode avec simplement le nom de ce qu'elles affichent
public class Affichage
{
    public double Potager(Plante[,] potager, string nom,string emoji)   //Affiche le Potager d'un terrain et renvoie le prix de l'agrandissement en fonction de son nom
    {
        double prixAgrandir = 0;
        char[] alphabet = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J' };

        ConsoleColor couleur = Console.ForegroundColor;
        
        switch (nom) //Change le prix en fonction du nom du terrain
        {
            case "Marecages Malins":
                Console.ForegroundColor = ConsoleColor.DarkBlue;
                prixAgrandir = 2000;
                break;
            case "Desert Delicat":
                Console.ForegroundColor = ConsoleColor.DarkYellow;
                prixAgrandir = 1000;
                break;
            case "Foret Facetieuse":
                Console.ForegroundColor = ConsoleColor.DarkGreen;
                prixAgrandir = 200;
                break;
            case "Volcan Violent":
                Console.ForegroundColor = ConsoleColor.DarkRed;
                prixAgrandir = 50;
                break;
            case "Plaines Paisibles":
                Console.ForegroundColor = ConsoleColor.DarkCyan;
                prixAgrandir = 10;
                break;
            default:
                break;
        }


        Console.Write("  "); //espace pour aligner les chiffres
        for (int j = 0; j < potager.GetLength(1); j++) //cr√©ation de la ligne de nombres du haut 
        {
            if (j < 9)
            {
                Console.Write($"  {j + 1} ");
            }
            else
            {
                if (j == 9)
                {
                    Console.Write(" "); //adaptation de la taille pour les nombres √† 2 chiffres
                }
                Console.Write($"{j + 1}  ");
            }
        }
        Console.WriteLine();

        Console.Write("  ");
        for (int j = 0; j < potager.GetLength(1); j++) //cr√©ation de la d√©limitation de la premi√®re ligne  
        {
            Console.Write("+---");
        }
        Console.Write("+");
        Console.WriteLine();

        for (int i = 0; i < potager.GetLength(0); i++) //Boucle servant √† afficher et remplir les cases du plateau 
        {
            Console.Write(alphabet[i] + " "); //afficher les lettres sur le cot√© gauche du plateau

            for (int j = 0; j < potager.GetLength(1); j++)
            {
                Plante(potager[i, j]); // Appel de la fonction Plante qui affiche la Plante correctement en fonction de ses param√®tres
            }
            Console.Write("|");
            Console.WriteLine();

            Console.Write("  ");
            for (int j = 0; j < potager.GetLength(1); j++) //cr√©ation de la d√©limitation du bas de la ligne
            {
                Console.Write("+---");
            }
            Console.Write("+");
            Console.WriteLine();
        }
        Console.WriteLine();
        Console.WriteLine("--- " + nom.ToUpper() + emoji+ " ---");
        Console.WriteLine();

        Console.ForegroundColor = couleur;

        return prixAgrandir;
    }

    public void Plante(Plante plante) //Affiche la plante en fonction de sa classe et de ses param√®tres sp√©ciaux si besoin
    {
        ConsoleColor couleur = Console.ForegroundColor;
        Console.ForegroundColor = ConsoleColor.White;

        if (plante is PlanteSimple pl)
        {
            if (pl.Immunite == 1) //Affiche le fond en Bleu si la Plante est prot√©g√©e pour 1 tour
            {
                Console.BackgroundColor = ConsoleColor.DarkBlue;
            }
            else if (pl.Immunite < 0) //Affiche le fond en Jaune si la Plante est prot√©g√©e ind√©finiment
            {
                Console.BackgroundColor = ConsoleColor.DarkYellow;
            }

        }


        if (plante is SolSimple)
        {
            Console.Write($"| {plante.Affichage} ");
        }
        else if (plante is PlanteTailler p)
        {
            if (p.Taillage == false) //Affiche la lettre en Vert si elle doit √™tre taill√©
            {
                Console.ForegroundColor = ConsoleColor.DarkGreen;
            }
            Console.Write($"| {plante.Affichage} ");
            Console.ForegroundColor = ConsoleColor.White;
        }
        else
        {
            Console.Write($"| {plante.Affichage} ");
            Console.ForegroundColor = ConsoleColor.White;
        }
        Console.ForegroundColor = couleur;
        Console.BackgroundColor = ConsoleColor.Black;
    }
    
    public void TexteEnProgressif(string texte, int pause) //Affiche du texte lettre par lettre pour un effet visuel agr√©able, la pause est le temps entre chaque lettre
    {
        for (int i = 0; i < texte.Length; i++)
        {
            Console.Write(texte[i]);
            Thread.Sleep(pause);
        }
        Console.WriteLine("");
    }

    public void Magasin() //Affiche le design et les instruction de l'accueil du magasin
    {
        Console.ForegroundColor = ConsoleColor.Magenta;

        Console.WriteLine("‚†Ä ‚†Ä   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ‚†Ä");
        Console.WriteLine("  ‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä");
        Console.WriteLine("‚†Ä‚†Ä‚¢†‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚°Ñ‚†Ä‚†Ä");
        Console.WriteLine("‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢π‚£ø‚£ø‚£ø‚£ø‚°ü‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä");
        Console.WriteLine("‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚°ü‚¢∏‚£ø‚£ø‚£ø‚£ø‚¢π‚£ø‚£ø‚£ø‚£ø‚°ò‚£ø‚£ø‚£ø‚£ø‚°á‚¢ª‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä   ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó");
        Console.WriteLine("‚†Ä‚¢Ä‚£õ‚£õ‚£õ‚£õ‚†É‚£õ‚£õ‚£õ‚£õ‚°ã‚†à‚£õ‚£õ‚£õ‚£õ‚†Å‚¢õ‚£õ‚£õ‚£õ‚£õ‚†ò‚£õ‚£õ‚£õ‚£õ‚°Ä‚†Ä   ‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë");
        Console.WriteLine("‚†Ä‚†à‚†ª‚†ø‚†ø‚†ã‚£Ä‚†à‚†ª‚†ø‚†ü‚¢Å‚°Ä‚†ô‚†ø‚†ø‚†ã‚¢Ä‚°à‚†ª‚†ø‚†ü‚†Å‚£Ä‚†ô‚†ø‚†ø‚†ü‚†Å‚†Ä   ‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë");
        Console.WriteLine("‚†Ä‚¢∏‚£∑‚£¶‚£∂‚£ø‚£ø‚£ø‚£∂‚£§‚£∂‚£ø‚£ø‚£∑‚£¶‚£¥‚£æ‚£ø‚£ø‚£∂‚£§‚£∂‚£ø‚£ø‚£ø‚£∂‚£¥‚£æ‚°á‚†Ä   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë");
        Console.WriteLine("‚†Ä‚¢∏‚£ø‚°è‚£â‚£â‚£â‚£â‚£â‚£â‚£â‚£â‚£â‚£â‚£â‚£â‚£â‚°â‚¢π‚£ø‚†â‚£â‚£â‚£â‚£â‚£â‚¢π‚£ø‚°á‚†Ä   ‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë");
        Console.WriteLine("‚†Ä‚¢∏‚£ø‚°á‚£ø‚†â‚¢â‚£©‚£≠‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢∏‚£ø‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚°á‚†Ä   ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù");
        Console.WriteLine("‚†Ä‚¢∏‚£ø‚°á‚£ø‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢∏‚£ø‚†Ä‚†ø‚†ø‚†ø‚†ø‚†ø‚¢∏‚£ø‚°á‚†Ä");
        Console.WriteLine("‚†Ä‚¢∏‚£ø‚°á‚£ø‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢∏‚£ø‚†Ä‚†∂‚†∂‚†∂‚†∂‚†∂‚¢∏‚£ø‚°á‚†Ä");
        Console.WriteLine("‚†Ä‚¢∏‚£ø‚°á‚£ø‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢∏‚£ø‚†Ä‚†∂‚†∂‚†∂‚†∂‚†∂‚¢∏‚£ø‚°á‚†Ä");
        Console.WriteLine("‚†Ä‚¢∏‚£ø‚°á‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚¢∏‚£ø‚†Ä‚£∂‚£∂‚£∂‚£∂‚£∂‚¢∏‚£ø‚°á‚†Ä");
        Console.WriteLine("‚†Ä‚¢∏‚£ø‚£∑‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£æ‚£ø‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚°á‚†Ä");
        Console.WriteLine("‚†Ä‚†à‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†Ä‚†â‚†â‚†â‚†â‚†â‚†à‚†â‚†Å‚†Ä");


        Console.WriteLine("\n\nBienvenue dans le magasin üè™‚Äã! \nTapez 1 pour acheter des Semis üå±\nTapez 2 pour vendre vos Plantesüå≥\nTapez 3 pour acheter un item üõ†Ô∏è\nTapez W pour consulter le WikiVerdadura des Plantes un item üßæ\nTapez G pour demander des renseignement sur les items au Garage üß∞‚Äã");
        Console.WriteLine("Tapez Q pour Quitter‚ùå");
        Console.ForegroundColor = ConsoleColor.White;
    }

    public int[] DemandeCasePotage() //Programme permettant de demander avec robustesse la case du Potager sur laquelle le joueur souhaite agir
    {
        Console.Write("Rentrez la case ou vous souhaitez agir : ");
        string casePlante = Console.ReadLine()!;


        int[][] coordonnees = new int[20 * 10][]; //Cr√©ation d'une liste imbriqu√©e de toutes les postions possibles class√©es dans l'ordre
        int p = 0;

        // Remplir le tableau coordonnees avec les positions de la matrice
        for (int i = 0; i < 10; i++)  // Colonnes (10 lettres)
        {
            for (int j = 0; j < 20; j++)  // Lignes (20 num√©ros)
            {
                coordonnees[p] = [i, j];
                p++;
            }
        }
        string[] casesLettres = new string[]
        {
            "A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9", "A10", "A11", "A12", "A13", "A14", "A15",
            "A16", "A17", "A18", "A19", "A20",
            "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", "B12", "B13", "B14", "B15",
            "B16", "B17", "B18", "B19", "B20",
            "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "C13", "C14", "C15",
            "C16", "C17", "C18", "C19", "C20",
            "D1", "D2", "D3", "D4", "D5", "D6", "D7", "D8", "D9", "D10", "D11", "D12", "D13", "D14", "D15",
            "D16", "D17", "D18", "D19", "D20",
            "E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8", "E9", "E10", "E11", "E12", "E13", "E14", "E15",
            "E16", "E17", "E18", "E19", "E20",
            "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "F13", "F14", "F15",
            "F16", "F17", "F18", "F19", "F20",
            "G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9", "G10", "G11", "G12", "G13", "G14", "G15",
            "G16", "G17", "G18", "G19", "G20",
            "H1", "H2", "H3", "H4", "H5", "H6", "H7", "H8", "H9", "H10", "H11", "H12", "H13", "H14", "H15",
            "H16", "H17", "H18", "H19", "H20",
            "I1", "I2", "I3", "I4", "I5", "I6", "I7", "I8", "I9", "I10", "I11", "I12", "I13", "I14", "I15",
            "I16", "I17", "I18", "I19", "I20",
            "J1", "J2", "J3", "J4", "J5", "J6", "J7", "J8", "J9", "J10", "J11", "J12", "J13", "J14", "J15",
            "J16", "J17", "J18", "J19", "J20",
        };
        for (int i = 0; i < casesLettres.Length; i++)
        {
            if (casePlante.ToUpper() == casesLettres[i])
            {
                return [coordonnees[i][0], coordonnees[i][1]];
            }
        }
        TexteEnProgressif("Case non valide!!!          ", 45);//Affiche l'erreur
        return [99, 99]; //Retourne 99 si la case n'est pas dans le Terrain
    }

    public void Program() //Affiche le design et les instruction de la page des menus du jeu quand on lance 
    {
        ConsoleColor couleurInitiale = Console.ForegroundColor;
        Console.ForegroundColor = ConsoleColor.DarkGreen;
        Console.WriteLine("");
        Console.WriteLine("");
        Console.WriteLine("");
        Console.WriteLine("                                                                                       ‚†Ä‚†Ä‚†Ä‚†à‚†â‚†õ‚¢∑‚£¶‚°Ä‚†Ä‚£Ä‚£†‚£§‚†§‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("                                                                                       ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£ª‚£ø‚£ø‚£ø‚£ã‚£Ä‚°Ä‚†Ä‚†Ä‚¢Ä‚£†‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("                                                                                       ‚†Ä‚†Ä‚†Ä‚£†‚†æ‚†õ‚†õ‚¢ª‚£ø‚£ø‚£ø‚†ü‚†õ‚†õ‚†ì‚†¢‚†Ä‚†Ä‚†â‚¢ø‚£ø‚£Ü‚£Ä‚£†‚£§‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("                                                                                       ‚†Ä‚†Ä‚†ò‚†Å‚†Ä‚†Ä‚£∞‚°ø‚†õ‚†ø‚†ø‚£ß‚°Ä‚†Ä‚†Ä‚¢Ä‚£§‚£§‚£§‚£º‚£ø‚£ø‚£ø‚°ø‚†ü‚†ã‚†â‚†â‚†Ä‚†Ä");
        Console.WriteLine("         ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ø‚£ø‚†ü‚†ª‚¢∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("         ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("         ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚£æ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("         ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë    ‚†Ä‚£§‚£§‚£§‚£§‚£§‚£§‚°§‚†Ñ‚†Ä‚†Ä‚£Ä‚°Ä‚¢∏‚°á‚¢†‚£§‚£Å‚£Ä‚†Ä‚†Ä‚††‚¢§‚£§‚£§‚£§‚£§‚£§‚£§‚†Ä");
        Console.WriteLine("          ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£∂‚£æ‚£ø‚£ø‚£∑‚£§‚£§‚£æ‚£ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("           ‚ïö‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù    ‚†Ä‚†Ä‚†Ä‚£†‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£Ñ‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("                                                                                       ‚†Ä‚†Ä‚†º‚†ø‚£ø‚£ø‚†ø‚†õ‚†â‚†â‚†â‚†ô‚†õ‚†ø‚£ø‚£ø‚†ø‚†õ‚†õ‚†õ‚†õ‚†ø‚¢ø‚£ø‚£ø‚†ø‚†ø‚†á‚†Ä‚†Ä");
        Console.WriteLine("                                                                                       ‚†Ä‚¢∂‚£§‚£Ä‚£Ä‚£†‚£¥‚†∂‚†õ‚†ã‚†ô‚†ª‚£¶‚£Ñ‚£Ä‚£Ä‚£†‚£§‚£¥‚†∂‚†∂‚£¶‚£Ñ‚£Ä‚£Ä‚£†‚£§‚£§‚°∂‚†Ä");
        Console.WriteLine("                                                                                       ‚†Ä‚†Ä‚†à‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("");
        Console.WriteLine("");


        Console.WriteLine("Bienvenue dans votre jeu üèùÔ∏è VerdaduraüèùÔ∏è  votre simulateur de Potager fantastique‚ú®‚Äã!!!");
        Console.WriteLine("");
        Console.ForegroundColor = couleurInitiale;
        Console.WriteLine("Pour cr√©er une nouvelle partie tapez N üòÅ‚Äã");
        Console.WriteLine("Pour charger une partie sauvegard√©e tapez S ‚Äãüíæ‚Äã");
        Console.WriteLine("Pour quitter tapez Q ‚ùå‚Äã‚Äã");
    }

    public void InfoTerrain(Terrain terrain) //Affiche les caract√©ristiques de chaque terrain
    {
        bool enCours = true;
        while (enCours)
        {
            string plantesFavorites = "";
            string descriptionTerrain = "";
            Console.Clear();
            switch (terrain.Nom)
            {
                case "Plaines Paisibles‚Äã":
                    plantesFavorites = "Erdomania & Broc√©lia & Humalis";
                    descriptionTerrain = "Les plaines paisibles sont l'endroit r√™v√© pour une petite balade en famille l'√©t√©.\n\nCaract√©ristiques particuli√®res:Aucune\n";
                    break;
                case "Foret Facetieuse‚Äã":
                    plantesFavorites = "Placinet & Ivoina & Zolia";
                    descriptionTerrain = "La for√™t fac√©tieuse saura assouvir votre soif de sylvoth√©rapie (On le dit quand on fait des calins aux arbres), mais aussi de champignons.\n\nCaract√©ristiques particuli√®res:Aucune\n";
                    break;
                case "Volcan Violent‚Äã":
                    plantesFavorites = "Demonia & Gorhy & Fenecia";
                    descriptionTerrain = "Le volcan violent est le jardin d'eden de tous les aventuriers qui appr√©cient la chaleur et aiment jouer avec le feu.\n\nCaract√©ristiques particuli√®res:Aucune\n";
                    break;
                case "Desert Delicat‚Äã":
                    plantesFavorites = "Cacruz & Jaunille & Arachneides";
                    descriptionTerrain = "Le d√©sert d√©licat peut permettre de faire des courses de rally, mais c'est surtout l'occasion d'observer de magnifiques cactus assoif√©s, il est d√©conseill√© d'y laisser des plantes ayant besoin d'eau.\n\nCaract√©ristiques particuli√®res: Ce terrain est min√©, √† chaque semaine, certaines cases explosent al√©atoirement (tuant les plantes s'il y en a) et vous devez b√©cher avant de pouvoir replanter.\n";
                    break;
                case "Marecages Malins‚Äã":
                    descriptionTerrain = "Les mar√©cages malins risquent de vous donneer bien du file √† retordre, entre les nenuphars et l'eau, faites attention √† ne pas vous embourber.\n\nCaract√©ristiques particuli√®res:Ce terrain n√©cessite de la jach√®re, ainsi, il est plus lent et vous obligera √† vous armer de patience.\n";
                    plantesFavorites = "Mutina & Nenustar & Kuintefeuille";
                    break;
            }
            Console.WriteLine("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
            Console.WriteLine($"‚ïë                                ‚ú¶‚ú¶ INFOS TERRAIN:{terrain.Emoji}{terrain.Nom,-18} ‚ú¶‚ú¶                       ‚ïë");
            Console.WriteLine("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
            Console.WriteLine("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
            Console.WriteLine($" Description du terrain : {descriptionTerrain}");
            Console.WriteLine($" Temp√©rature üå°Ô∏è          : üåº‚Äã √âveil fleuri : {terrain.Temperature[0],-10}‚òÄÔ∏è √âclat Profond : {terrain.Temperature[1],-10}üçÇ Le Repli d‚ÄôOr : {terrain.Temperature[2],-10}‚ùÑÔ∏è Repos Blanc : {terrain.Temperature[3],-5}¬∞C");
            Console.WriteLine($" Humidit√© üíß            : üåº‚Äã √âveil fleuri : {terrain.Humidite[0],-10}‚òÄÔ∏è √âclat Profond : {terrain.Humidite[1],-10}üçÇ Le Repli d‚ÄôOr : {terrain.Humidite[2],-10}‚ùÑÔ∏è Repos Blanc : {terrain.Humidite[3],-5}%");
            Console.WriteLine($" Ensoleillement ‚òÄÔ∏è       : üåº‚Äã √âveil fleuri : {terrain.Ensoleillement[0],-10}‚òÄÔ∏è √âclat Profond : {terrain.Ensoleillement[1],-10}üçÇ Le Repli d‚ÄôOr : {terrain.Ensoleillement[2],-10}‚ùÑÔ∏è Repos Blanc : {terrain.Ensoleillement[3],-5}h/j");
            Console.WriteLine($" Pluie üåßÔ∏è                : üåº‚Äã √âveil fleuri : {terrain.Pluie[0],-10}‚òÄÔ∏è √âclat Profond : {terrain.Pluie[1],-10}üçÇ Le Repli d‚ÄôOr : {terrain.Pluie[2],-10}‚ùÑÔ∏è Repos Blanc : {terrain.Pluie[3],-5}mm");
            Console.WriteLine($" Plantes favorites üå≥   : {plantesFavorites}                                               ");
            Console.WriteLine("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
            Console.WriteLine("Pour quitter tapez Q ‚ùå");
            switch (Console.ReadKey().Key)
            {
                case ConsoleKey.Q:
                    enCours = false;
                    break;
            }
        }
    }

    public void Tutoriel(string nom) //Affiche les instruction de tutoriel
    {
        Console.ForegroundColor = ConsoleColor.Green;
        Console.WriteLine(
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢¥‚†í‚¢¢‚°Ä‚¢Ä‚°§‚¢§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†∑‚£Ñ‚°ì‚°ã‚£Ä‚£¥‚†ó‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£§‚£Ä‚£§‚£¥‚†∂‚†∂‚†õ‚†õ‚†õ‚†ª‚¢ø‚£•‚£Ω‚£∑‚£§‚£º‚¢É‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚†ã‚†Å‚†Ä‚£ø‚†Ä‚†Ä‚†Å‚†Ä‚£§‚°∂‚†∂‚¢∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚°è‚†ô‚¢∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£º‚†ø‚†∂‚†∂‚†æ‚†ã‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚£§‚£§‚£§‚†ø‚†É‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†∑‚†¶‚†ø‚¢∑‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°∂‚¢ø‚°Ö‚†Ä‚£†‚°¥‚†∂‚†õ‚†õ‚†≥‚†∂‚†∂‚†∂‚†∂‚†∂‚†∂‚†æ‚†ü‚†õ‚†õ‚†≥‚†∂‚£¶‚£Ñ‚†Ä‚†Ä‚¢Ä‚£ø‚†∑‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢æ‚°Ö‚£∏‚°ø‚£æ‚†è‚¢Ä‚†Ä‚†Ä‚†ê‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ü‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£¶‚†∏‚£ß‚£†‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ü‚°õ‚¢π‚°è‚†Ä‚†à‚†ë‚¢†‚£∂‚†ü‚†≥‚£Ü‚£Ä‚£Ä‚£Ä‚£Ä‚¢Ä‚£¥‚†æ‚†≥‚£¶‚°Ä‚†ê‚†Ä‚†Ä‚†π‚£ß‚†à‚¢π‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∑‚†É‚†∏‚£∑‚°â‚†Ä‚¢†‚°ø‚†Å‚£∂‚†Ä‚†ô‚£â‚†â‚£â‚°â‚†ô‚†É‚£∂‚°Ü‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚¢Ä‚°ø‚†∞‚£ø‚£Ω‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£Ü‚°Ä‚†ô‚¢∑‚£§‚°ü‚†Ä‚†Ä‚†â‚†Ä‚†Ä‚†ô‚†õ‚†õ‚†Å‚†Ä‚†Ä‚†â‚†Ä‚†à‚¢ª‚°Ñ‚¢Ä‚£†‚°æ‚†É‚¢Ä‚£º‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚†∑‚£¶‚£¨‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚£≠‚£©‚£§‚£¥‚†ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£π‚°∑‚£Ä‚†Ä‚†Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ú‚£∑‚†Ä‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚£ø‚£Ñ‚†â‚†õ‚†õ‚¢©‚°ø‚†Ä‚†Ä‚†Ä‚£æ‚†õ‚†õ‚†õ‚†õ‚†Å‚£º‚°ø‚¢ª‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚†§‚¢§‚†∏‚†É‚°º‚†É‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚¢∞‚£ã‚£ô‚†¢‚¢Ç‚£†‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°á‚†Ä‚†ª‚£Ü‚†õ‚†õ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†ô‚†ª‚†∂‚†æ‚†É‚£º‚†è‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†¶‚£Ñ‚†Ñ‚††‚°Ñ‚†ô‚¢í‚°Ñ‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†à‚†â‚†Å‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°á‚¢∂‚°Ñ‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ã‚¢∞‚°Ü‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ø‚†Ñ‚°î‚†à‚†â‚†â‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°á‚†Ä‚†Ä‚¢æ‚£ã‚¢â‚†Ç‚¢ò‚£à‚°∑‚†Ä‚†Ä‚¢Ä‚£Ä‚£†‚£ø‚°Ä‚¢ª‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†É‚£ª‚£õ‚£õ‚£ø‚°¶‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚†Ä‚°†‚†§‚¢Ñ‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†à‚†â‚¢≥‚°â‚†Å‚†Ä‚†Ä‚†Ä‚†ø‚†Ω‚£∂‚°∂‚£∞‚°Ñ‚£ø‚£§‚£Ñ‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚£§‚£ø‚£∏‚£æ‚£Ω‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†≥‚†•‚†§‚£Ö‚†•‚†¥‚†õ‚†Ä‚£æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†õ‚†ô‚†∑‚†ü‚†Ä‚†à‚†â‚†â‚†õ‚†õ‚†õ‚†ã‚†â‚†â‚†â‚†â‚†Ä‚†à‚†ô‚†ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        Console.WriteLine("");
        Console.ForegroundColor = ConsoleColor.Cyan;
        Console.WriteLine($"‚ú® Salutations, noble Voyageur... bienvenue dans ton royaume enchant√© : {nom} ! ‚ú®");
        Console.ResetColor();

        Console.WriteLine("üßû‚Äã Je suis Optegar, l‚Äô√¢me mill√©naire du Potager... un esprit ancien li√© √† la terre et au souffle des saisons.");
        Console.WriteLine("üßπ Le vent murmure que de grandes t√¢ches t‚Äôattendent... les Potagers de ces Terres ne se cultivent pas tout seuls !");
        Console.WriteLine("üåç Cinq terres magiques t‚Äôaccueillent, chacune aux charmes et caprices diff√©rents... Renseigne-toi bien avant d‚Äôy planter quoi que ce soit.");

        Console.WriteLine();
        Console.ForegroundColor = ConsoleColor.Green;
        Console.WriteLine("üå∏ Car pour faire na√Ætre les merveilles v√©g√©tales... il faudra soin, patience et magie verte !");
        Console.ResetColor();

        Console.WriteLine();
        Console.WriteLine("üè∞ Un fabuleux Magasin t‚Äôattend dans ton monde... pousse ses portes, tu y trouveras merveilles et tr√©sors botaniques ‚ú®");
        Console.WriteLine("üß∫ Des semis d‚Äôune qualit√© l√©gendaire t‚Äôy attendent, mais prends garde : chaque plante a ses caprices, et toutes ne s‚Äô√©panouissent pas dans le m√™me sol...");
        Console.WriteLine("‚Äãüìñ‚Äã De plus de vieux grimoires s'y trouvent et regorgent de tous les savoirs dont tu auras besoin.");
        Console.WriteLine("üí∞ On raconte que le Magasin rach√®te les Plantes m√ªres √† un prix... fort all√©chant.");
        Console.WriteLine("Les esprits parlent de 'PnL', une magie de richesse myst√©rieuse qui te permettra d'amasser plein de Verdamoula üí∞...");

        Console.WriteLine();
        Console.ForegroundColor = ConsoleColor.Magenta;
        Console.WriteLine("üåü Que la chance t‚Äôaccompagne, Jardinier des √âtoiles... que tes terres rayonnent de vie et d‚Äôabondance !");
        Console.WriteLine("üçÄ Bon courage, et puisse la magie de la nature t‚Äôinspirer √† chaque graine plant√©e !");
        Console.ResetColor();
        Console.WriteLine("\nTapez Entr√©e pour commencer votre aventure !");

        Console.ForegroundColor = ConsoleColor.White;
    }

    public void Chenille() //Affiche le design ASCII de chenille
    {
        Console.OutputEncoding = System.Text.Encoding.UTF8;

        string chenille = @"
‚†Ä‚†Ä‚£æ‚£ø‚†ç‚†ì‚¢¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚†ñ‚†õ‚£ø‚£∂‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†ô‚†â‚†Ä‚†Ä‚†à‚¢≥‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Å‚†Ä‚†Ä‚†ô‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚†ø‚†í‚†í‚†í‚†í‚†í‚†ö‚†¶‚†§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚†û‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†≤‚¢Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚£†‚†û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚£¥‚†É‚†Ä‚†Ä‚£¥‚£ø‚†ø‚£∂‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚°ü‚¢∑‚°Ñ‚†Ä‚†Ä‚†à‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢∞‚†É‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£∑‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£∑‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†à‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚£æ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†ò‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†±‚£Ñ‚°Ä‚¢Ä‚°¥‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†à‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†à‚†ô‚£∂‚¢§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚°§‚†∂‚°ø‚¢¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†É‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†Å‚†Ä‚†Ä‚†∏‚£á‚£à‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚¢†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°¥‚†í‚†≤‚†§‚£Ñ‚†Ä‚†Ä‚†ò‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚£†‚†∂‚†ã‚¢π‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ß‚£Ä‚†Ä‚†Ä‚†Ä‚¢π‚°Ñ‚†Ä‚°æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢ø‚£Ä‚£Ä‚°®‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†ã‚†â‚†Ä‚£º‚£á‚£§‚†¥‚†í‚¢∑‚†í‚†≤‚°ñ‚†§‚£§‚†ñ‚†í‚†ö‚¢ª‚°ô‚†í‚£∂‚†§‚£§‚†ñ‚†í‚†ª‚°ç‚¢≥‚°í‚¢¶‚£Ä‚°§‚†¥‚£ñ‚¢≤‚°∂‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†û‚†π‚£Ñ‚¢π‚£ß‚°Ä‚†à‚¢ß‚°Ä‚¢±‚°Ñ‚†à‚†ô‚¢¶‚†Ä‚†Ä‚†±‚£Ñ‚†ò‚°Ü‚†à‚†≥‚£Ñ‚†Ä‚†ô‚†ì‚†É‚†Ä‚†à‚¢ß‚°Ä‚†à‚†â‚†É‚†Ä‚†π‚£¶‚°Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†ô‚†≤‚¢§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£†‚†§‚†î‚†ä‚†Å‚†Ä‚†Ä‚†Ä‚†â‚†Å‚°á‚†Ä‚†Ä‚†â‚†â‚†Ä‚†Ä‚†Ä‚†à‚¢≥‚°Ä‚†Ä‚†à‚†â‚†Å‚†Ä‚†Ä‚†ò‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†à‚†≥‚°Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°Ü‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚£Ä‚†Ä‚¢∏‚¢Ç‚£†‚†á
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢£‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†á‚†Ä‚£Ä‚£Ä‚£Ä‚†Ä‚°û‚†Ä‚†Ä‚£ø‚°õ‚¢π‚°û‚†ã‚†Å‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£Ä‚°Ä‚†Ä‚†Ä‚£†‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚°Ä‚¢Ä‚°ü‚†Ä‚†Ä‚¢ø‚†Å‚†∏‚£æ‚£Å‚£Ä‚£Ä‚†º‚†∑‚£º‚†É‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†û‚†â‚†ô‚¢§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£è‚†Ä‚†Ä‚†ô‚£§‚°¥‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°§‚¢§‚°Ä‚¢Ä‚°ú‚†Ä‚†Ä‚†Ä‚¢ø‚†Ä‚†Ä‚¢≥‚£æ‚£Ä‚£Ä‚£†‚°º‚¢ß‚£Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ß‚£Ñ‚†§‚†§‚†í‚†ã‚†ì‚†≤‚†§‚†§‚£Ä‚£Ä‚£Ä‚£Ä‚£ò‚£ß‚£Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£è‚†Ä‚†Ä‚¢ø‚°Ø‚¢Ñ‚£Ä‚°†‚†§‚†º‚¢ß‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†õ‚†â‚†õ‚†í‚†í‚†í‚†í‚†í‚†ª‚°Ñ‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ì‚¢õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";

        Console.WriteLine(chenille);
    }

    public void Accueil() //Affiche le design ASCII de l'accueil
    {
        Console.ForegroundColor = ConsoleColor.DarkGreen;
        Console.OutputEncoding = System.Text.Encoding.UTF8;

        string accueil = @"
                    _,_           +                   __
                    ','                  /\          `. `.
            .                        .'  \    +      ""  |
                                    /     \         /  .'         .
                        .'\      .'       \       `""`
        +             .-'   `.   /          `.
                .     .'        \.'             \
                .-'           \               \   .-`""-.      . +
            .'.'               \               \.'       `-.
            /                    `.           .-'\           `-._
            .'                       \       .-'                   `-.
                                                                    `-.
    .-------------------'''''''''''''''              _.--      .'
                                    ___..         _.--''        .'jb
                            --''''             '            .'

    ";

        Console.WriteLine(accueil);
        Console.ForegroundColor = ConsoleColor.White;
    }


    public void Rat() //Affiche le design ASCII du rat
    {
        // Pour bien afficher tous les caract√®res, surtout les symboles sp√©ciaux
        Console.OutputEncoding = System.Text.Encoding.UTF8;

        string rat = @"
         __             _,-""~^""-.
       _// )      _,-""~`         `.
     ."" ( /`""-,-""`                 ;
    / 6                             ;
   /           ,             ,-""     ;
  (,__.--.      \           /        ;
   //'   /`-.\   |          |        `._________
     _.-'_/`  )  )--...,,,___\     \-----------,)
   (((""~` _.-'.-'           __`-.   )         //
         (((""`             (((---~""`         //
                                            ((________________
                                            `----""""~~~~^^^```";

        Console.WriteLine(rat);

    }
    public void Poule() //Affiche le design ASCII de la poule
    {
        Console.OutputEncoding = System.Text.Encoding.UTF8;
        string poule = @"
                                              _
                                   .-.  .--''` )
                                _ |  |/`   .-'`
                               ( `\      /`
                               _)   _.  -'._
                             /`  .'     .-.-;
                             `).'      /  \  \
                            (`,        \_o/_o/__
                             /           .-''`  ``'-.
                             {         /` ,___.--''`
                             {   ;     '-. \ \
           _   _             {   |'-....-`'.\_\
          / './ '.           \   \          `""`
       _  \   \  |            \   \
      ( '-.J     \_..----.._ __)   `\--..__
     .-`                    `        `\    ''--...--.
    (_,.--""`/`         .-             `\       .__ _)
            |          (                 }    .__ _)
            \_,         '.               }_  - _.'
               \_,         '.            } `'--'
                  '._.     ,_)          /
                     |    /           .'
                      \   |    _   .-'
                       \__/;--.||-'
                        _||   _||__   __
                 _ __.-` ""`)(` ""  ```._)
                (_`,-   ,-'  `''-.   '-._)
               (  (    /          '.__.'
                `""`'--'";

        Console.WriteLine(poule);
    }
    public void Fee() //Affiche le design ASCII de la f√©e
    {
        Console.OutputEncoding = System.Text.Encoding.UTF8;
        string Fee = @"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°§‚†§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†à‚†Ç‚¢Ä‚†â‚†¢‚¢Ñ‚†Ä‚†Ä‚¢†‚£æ‚°∂‚°æ‚†Å‚¢Ä‚£†‚£†‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°ã‚†ç‚£â‚†Å‚†í‚†£‚†§‚£Ä‚¢â‚†ê‚†Ñ‚°ë‚¢¶‚°π‚£ø‚£ø‚£¥‚£ø‚£ø‚£ø‚£ø‚†è‚†Ä‚†Ä‚†Ä‚£†‚£¥‚£∫‚£Ö‚°Ä‚£Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ë‚¢Ñ‚†Ä‚†à‚†ë‚¢Ñ‚†í‚†Ç‚†¨‚¢±‚°í‚†¨‚££‚†ô‚¢Ü‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†Ä‚¢Ä‚£æ‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚†Ä‚†Ä‚¢à‚°ª‚†Å
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚°í‚†Ç‚††‚¢¨‚†ê‚†Ç‚††‚†•‚¢¢‚£à‚†ë‚†§‚°≥‚°ô‚¢ø‚£ø‚£ø‚£ø‚°ø‚¢Ä‚£æ‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†ê‚¢É‚†Ä‚£Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≤‚£à‚†Å‚†à‚†Ä‚¢í‚†í‚†¶‚†§‚†©‚†∂‚¢å‚£≥‚£∏‚£ø‚£ø‚£°‚£¥‚£ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†Ü‚†Ä‚†ô‚†Å‚†à‚†à‚†â‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∂‚£Ñ‚°â‚†Å‚†ö‚†í‚¢í‚£≤‚£¶‚£§‚£∂‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚£¶‚†Ä‚†ò‚†Ç‚†ê‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†ª‚†∂‚†∂‚¢ø‚†ø‚£õ‚†ø‚£´‚¢ü‚†É‚°ú‚£ø‚£ø‚£ø‚£ø‚†É‚¢†‚†Ä‚††‚†Ü‚£Ä‚†Ä‚†∏‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚¢í‚†°‚°Æ‚°™‚¢ã‚¢Ç‚†é‚£§‚†Å‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚†£‚†•‚°ú‚°†‚†ë‚°ô‚¢ã‚£†‚£ß‚£æ‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£î‚°†‚†î‚†ì‚£π‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£∂‚£§‚£†‚£§‚£§‚£§‚£§‚£Ñ‚£Ä‚†Ä‚£†‚£ø‚£ø‚£ø‚¢ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†¥‚†õ‚†ã‚†â‚†â‚†â‚†â‚†õ‚†õ‚£ª‚£ø‚£ø‚£ø‚£ø‚°ø‚†õ‚†Å‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚£†‚£¥‚£ø‚£ø‚†ø‚†ü‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚†ü‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä";
        Console.WriteLine(Fee);
    }
    public void Pluie() //Affiche le design ASCII de la pluie
    {
        Console.OutputEncoding = System.Text.Encoding.UTF8;

        string pluie = @"
                                            ___         
                                    ,""" + "\"\"\"\"'      `." + @"
                                   ,'        _.    ,'""""'.`._
                                  ,'       ,'              `""" + @"'.
                                 ,'    .-""`.    ,-'            `.
                                ,'    (        ,'                :
                              ,'     ,'           __,            `.
                        ,""""'     .' ;-.    ,  ,'  \             `"""".
                      ,'           `-(   `._(_,'     )_                `.
                     ,'         ,---. \ @ ;   \ @ _,'                   `.
                ,-""'         ,'      ,--'-    `;'                       `.
               ,'            ,'      (      `. ,'                          `.
               ;            ,'        \    _,','                            `.
              ,'            ;          `--'  ,'                              `.
             ,'             ;          __    (                    ,           `.
             ;              `____...  `      `.                  ,'           ,'
             ;    ...----'''' )  _.-  .       `.                ,'    ,'    ,'
_....----''' '.        _..--""_.-:.-' .'        `.             ,''.   ,' `--'
              `""     "" _.-'' .-'`-.:..___...--' `-._      ,-""'   `-'" + @"
        _.--'       _.-'    .'   .' .'               `""""""
  __.-''        _.-'     .-'   .'  /
 '          _.-' .-'  .-'        .'
        _.-'  .-'  .-' .'  .'   /
    _.-'      .-'   .-'  .'   .'
_.-'       .-'    .'   .'    /
       _.-'    .-'   .'    .'
    .-'            .'
";

        Console.WriteLine(pluie);


    }
}




